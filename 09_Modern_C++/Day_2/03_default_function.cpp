#include <type_traits>
#include <iostream>

class Point
{
	int x, y;
public:
	Point(int a, int b) {}

    /*  Default constructor
        1. User implementation
        Point(){}

        2. Request compiler
        => Compiler knows everything and do better optimization.
    */
    Point() = default; // good
};

int main()
{
	Point p1;
	Point p2(1, 2);

    /*  Special functions are generated by constructor, destructor, 
        copy constructor and they are trivial.
        Trivial constructor : constructor that does nothing.
        This can check whether target class has 'default' constructor.
    */

   std::cout << std::is_trivially_constructible<Point>::value
             << std::endl;
}

